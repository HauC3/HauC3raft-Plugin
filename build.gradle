plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

// See https://purpurmc.org/docs/purpur/ for the latest version
var purpurVersion = '1.20.1-R0.1-SNAPSHOT'

// See https://hangar.papermc.io/pianoman911/MapEngine/versions for the latest version
var mapEngineVersion = '1.7.3'

// See https://hangar.papermc.io/pianoman911/MapEngine-MediaExtension/versions for the latest version
var mapEngineMediaExtVersion = '1.1.2'

// See https://kotlinlang.org/docs/home.html for the latest version
var kotlinVersion = '1.9.23'

// Change this to your package name
group = 'net.hauc3.hauc3raft'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'purpurmc'
        url = 'https://repo.purpurmc.org/snapshots'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'tjcserver'
        url = 'https://repo.thejocraft.net/releases/'
    }
}

dependencies {
    compileOnly 'org.purpurmc.purpur:purpur-api:' + purpurVersion
    compileOnly 'de.pianoman911:mapengine-api:' + mapEngineVersion
    compileOnly 'de.pianoman911:mapengine-mediaext:' + mapEngineMediaExtVersion
    shadow "org.jetbrains.kotlin:kotlin-stdlib:" + kotlinVersion
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

tasks.build {
    dependsOn shadowJar
}

