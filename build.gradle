plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

// See https://purpurmc.org/docs/purpur/ for the latest version
var purpurVersion = '1.21.4-R0.1-SNAPSHOT'

// See https://hangar.papermc.io/pianoman911/MapEngine/versions for the latest version
var mapEngineVersion = '1.8.7'

// See https://hangar.papermc.io/pianoman911/MapEngine-MediaExtension/versions for the latest version
var mapEngineMediaExtVersion = '1.1.3'

// See https://kotlinlang.org/docs/home.html for the latest version
var kotlinVersion = '2.1.0'

// See https://central.sonatype.com/artifact/net.luckperms/api/versions for the latest version
var luckPermsVersion = '5.4'

// See https://repo.dmulloy2.net/repository/public/com/comphenix/protocol/ProtocolLib/maven-metadata.xml for the latest version
var protocolLibVersion = '5.3.0'

// See https://plasmovoice.com/docs/api/ for the latest version
var plasmoVoiceVersion = '2.1.3-SNAPSHOT'

// See https://jitpack.io/#LeonMangler/SuperVanish for the latest version
var premiumVanishVersion = '6.2.19'

// Change this to your package name
group = 'net.hauc3.hauc3raft'
version = '1.1'

repositories {
    mavenCentral()
    maven {
        name = 'purpurmc'
        url = 'https://repo.purpurmc.org/snapshots'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'tjcserver'
        url = 'https://repo.thejocraft.net/releases/'
    }
    maven {
        name = 'dmulloy2'
        url = 'https://repo.dmulloy2.net/repository/public/'
    }
    maven {
        name = 'plasmoverse-releases'
        url = 'https://repo.plasmoverse.com/releases'
    }
    maven {
        name = 'plasmoverse-snapshots'
        url = 'https://repo.plasmoverse.com/snapshots'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'org.purpurmc.purpur:purpur-api:' + purpurVersion
    compileOnly 'de.pianoman911:mapengine-api:' + mapEngineVersion
    compileOnly 'de.pianoman911:mapengine-mediaext:' + mapEngineMediaExtVersion
    compileOnly 'net.luckperms:api:' + luckPermsVersion
    compileOnly 'com.comphenix.protocol:ProtocolLib:' + protocolLibVersion
    compileOnly 'su.plo.voice.api:server:' + plasmoVoiceVersion
    compileOnly 'com.github.LeonMangler:SuperVanish:' + premiumVanishVersion
    shadow "org.jetbrains.kotlin:kotlin-stdlib:" + kotlinVersion
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

tasks.build {
    dependsOn shadowJar
}

